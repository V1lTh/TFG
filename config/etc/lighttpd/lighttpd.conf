###############################################################################
# Author: V1lTh

###############################################################################

# server.modules-path = "/usr/lib/lighttpd"

# {{{ variables
var.basedir  = "/var/www/localhost"
var.logdir   = "/var/log/lighttpd"
var.statedir = "/var/lib/lighttpd"
# }}}

# {{{ modules
# At the very least, mod_access and mod_accesslog should be enabled.
# All other modules should only be loaded if necessary.
# NOTE: the order of modules is important.

server.modules = (
    # --- Autenticación ---
        "mod_auth",          # Marco principal para la autenticación.
        "mod_authn_file",    # Backend para autenticación con archivos (plain, htpasswd).

    # --- Contenido Dinámico ---
        "mod_cgi",           # Soporte para scripts CGI (Perl, Python...). Para contenido dinámico.
        "mod_fastcgi",       # Interfaz eficiente para aplicaciones web (PHP-FPM...). Para conteni>

    # --- Funcionalidad Base y Optimización ---
        "mod_staticfile",    # Sirve archivos estáticos (HTML, CSS, imágenes...). Necesario para casi cualquier sitio web.
        "mod_accesslog",     # Registra las peticiones al servidor. Esencial para análisis y depuracion
        "mod_alias",         # Define alias para directorios. Útil para organizar contenido.
        "mod_access",        # Control de acceso basado en IP. Para restringir acceso.
        "mod_dirlisting",    # Genera listados de directorios. Útil si no hay un índice.



    # --- Funcionalidades Opcionales ---
        "mod_openssl",       # Soporte para HTTPS. Para conexiones seguras.
        "mod_rewrite",       # Reescritura de URLs. Para URLs amigables.
        "mod_redirect",      # Redirecciones HTTP.

        #    "mod_status",        # Información del estado del servidor. Para monitorización.
        #    "mod_setenv",        # Establecer variables de entorno.
        #    "mod_proxy",         # Funcionalidad de proxy.
        #    "mod_simple_vhost",  # Virtual Hosts básicos. Para alojar múltiples sitios.
        #    "mod_evhost",        # Virtual Hosts avanzados.
        #    "mod_userdir",       # Directorios web por usuario (~usuario/).
        #    "mod_deflate",       # Compresión HTTP. Para mejorar el rendimiento.
        #    "mod_ssi",           # Server Side Includes.
        #    "mod_expire",        # Control de caché del navegador.
        #    "mod_rrdtool",       # Gráficos de rendimiento.
        #    "mod_webdav",        # Edición colaborativa de archivos.
)

# }}}

# {{{ includes
include "mime-types.conf"
# uncomment for cgi support
#    include "mod_cgi.conf"
# uncomment for php/fastcgi support
include "mod_fastcgi.conf"
# uncomment for php/fastcgi fpm support
#    include "mod_fastcgi_fpm.conf"
# }}}

# {{{ server settings
server.username      = "lighttpd"
server.groupname     = "lighttpd"

server.document-root = "/home/cesar/web"
server.pid-file      = "/run/lighttpd.pid"

alias.url = (
        "/phpmyadmin/" => "/usr/share/webapps/phpmyadmin/",
        "/auth/" => "/home/cesar/web/sites/auth.php",
        "/upload/" => "/home/cesar/web/sites/upload.php",

        )



# Ejemplo de configuracion para CGI globalmente (si no usas FastCGI)
$HTTP["url"] =~ "\.php$" {
    cgi.assign = ( "" => "/usr/bin/php-cgi" ) # <-- Asegura que la ruta a php-cgi sea correcta
}






server.errorlog      = var.logdir  + "/error.log"
# log errors to syslog instead
#    server.errorlog-use-syslog = "enable"

index-file.names     = ("index.php", "index.html", "index.htm", "default.htm")
server.bind = "0.0.0.0" # This can remain global


# --------------------- Redireccion HTTP to HTTPS --------------------------


#   $SERVER["socket"] == ":80" {
#       url.redirect = (".*" => "https://${url.authority}${url.path}${qsa}")
#   }

# -------------- HTTPS 443 SSL/TLS MINIMO ---------------

# $SERVER["socket"] == ":443" {
#     server.ssl.engine = "enable"
#     server.ssl.certificate = "/etc/lighttpd/cert.pem"
#     server.ssl.key = "/etc/lighttpd/privkey.pem"

# server.ssl.pemfile = "/etc/lighttpd/server.pem" # <-- Usar el archivo combinado

}


# server.tag           = "lighttpd"
# event handler (defaults to OS-specific event framework)
# see performance.txt
#
# for >= linux-2.6
#    server.event-handler = "linux-sysepoll"
# for FreeBSD
#    server.event-handler = "freebsd-kqueue"

# chroot to directory (defaults to no chroot)
# server.chroot        = "/"

# bind to port (defaults to 80)
# server.port          = 81 # Example of another port, commented out

# bind to name (defaults to all interfaces)
# server.bind          = "grisu.home.kneschke.de" # Example of binding to a specific name

# error-handler for status 404
# server.error-handler-404 = "/error-handler.html"
# server.error-handler-404 = "/error-handler.php"

# Format: <errorfile-prefix><status-code>.html
# -> ..../status-404.html for 'File not found'
# server.errorfile-prefix      = var.basedir + "/error/status-"

# support for caching stat() calls (default "simple")
# for Linux
#    server.stat-cache-engine = "inotify"
# for FreeBSD
#    server.stat-cache-engine = "kqueue"
# }}}

# {{{ mod_staticfile

# which extensions should not be handled via static-file transfer
# (extensions that are usually handled by mod_cgi, mod_fastcgi, etc).
static-file.exclude-extensions = (".php", ".pl", ".cgi", ".fcgi")
# }}}

# {{{ mod_accesslog
accesslog.filename   = var.logdir + "/access.log"
# }}}

# {{{ mod_dirlisting
# enable directory listings
#    dir-listing.activate      = "enable"
#
# don't list hidden files/directories
#    dir-listing.hide-dotfiles = "enable"
#
# use a different css for directory listings
#    dir-listing.external-css  = "/path/to/dir-listing.css"
#
# list of regular expressions.   files that match any of the
# specified regular expressions will be excluded from directory
# listings.
#    dir-listing.exclude = ("^\.", "~$")
# }}}

# {{{ mod_access
# see access.txt

url.access-deny = ("~", ".inc")
# }}}

# {{{ mod_userdir
# see userdir.txt
#
# userdir.path = "public_html"
# userdir.exclude-user = ("root")
# }}}

# {{{ mod_ssi
# see ssi.txt
#
# ssi.extension = (".shtml")
# }}}

# {{{ mod_ssl
# see ssl.txt
#
# Note: The actual ssl configuration is done above within the $SERVER["socket"] == ":443" block.
# The example config here is just for reference.
#
# ssl.engine     = "enable"
# ssl.pemfile    = "server.pem"
# }}}

# {{{ mod_status
# see status.txt
#
# status.status-url  = "/server-status"
# status.config-url  = "/server-config"
# }}}

# {{{ mod_simple_vhost
# see simple-vhost.txt
#
#   If you want name-based virtual hosting add the next three settings and load
#   mod_simple_vhost
#
# document-root =
#    virtual-server-root + virtual-server-default-host + virtual-server-docroot
# or
#    virtual-server-root + http-host + virtual-server-docroot
#
# simple-vhost.server-root   = "/home/weigon/wwwroot/servers/"
# simple-vhost.default-host  = "grisu.home.kneschke.de"
# simple-vhost.document-root = "/pages/"
# }}}

# {{{ mod_deflate
# see compress.txt
#
# deflate.cache-dir   = var.statedir + "/cache/compress"
# deflate.mimetypes   = ("text/plain", "text/html")
# }}}

# {{{ mod_proxy
# see proxy.txt
#
# proxy.server          = ( ".php" =>
#                           ( "localhost" =>
#                             (
#                               "host" => "192.168.0.101",
#                               "port" => 80
#                             )
#                           )
#                         )
# }}}

# {{{ mod_auth
# see authentication.txt
#
# auth.backend           = "plain"
# auth.backend.plain.userfile = "lighttpd.user"
# auth.backend.plain.groupfile = "lighttpd.group"

# auth.backend.ldap.hostname = "localhost"
# auth.backend.ldap.base-dn  = "dc=my-domain,dc=com"
# auth.backend.ldap.filter   = "(uid=$)"

# auth.require           = ( "/server-status" =>
#                           (
#                             "method"  => "digest",
#                             "realm"   => "download archiv",
#                             "require" => "user=jan"
#                           ),
#                           "/server-info" =>
#                           (
#                             "method"  => "digest",
#                             "realm"   => "download archiv",
#                             "require" => "valid-user"
#                           )
#                         )
# }}}

# {{{ mod_rewrite
# see rewrite.txt
#
# url.rewrite = (
#       "^/$"          =>          "/server-status"
# )
# }}}

# {{{ mod_redirect
# see redirect.txt
#
# Note: The actual redirect configuration is done above within the $SERVER["socket"] == ":80" block.
# The example config here is just for reference.
#
# url.redirect = (
#       "^/wishlist/(.+)"          =>          "http://www.123.org/$1"
# )
# }}}

# {{{ mod_evhost
# define a pattern for the host url finding
# %% => % sign
# %0 => domain name + tld
# %1 => tld
# %2 => domain name without tld
# %3 => subdomain 1 name
# %4 => subdomain 2 name
#
# evhost.path-pattern        = "/home/storage/dev/www/%3/htdocs/"
# }}}

# {{{ mod_expire
# expire.url = (
#       "/buggy/"          =>          "access 2 hours",
#       "/asdhas/"         =>          "access plus 1 seconds 2 minutes"
# )
# }}}

# {{{ mod_rrdtool
# see rrdtool.txt
#
# rrdtool.binary    = "/usr/bin/rrdtool"
# rrdtool.db-name = var.statedir + "/lighttpd.rrd"
# }}}

# {{{ mod_setenv
# see setenv.txt
#
# setenv.add-request-header  = ( "TRAV_ENV" => "mysql://user@host/db" )
# setenv.add-response-header = ( "X-Secret-Message" => "42" )
# }}}

# {{{ mod_webdav
# see webdav.txt
#
# $HTTP["url"] =~ "^/dav($|/)" {
#       webdav.activate = "enable"
#       webdav.is-readonly = "enable"
# }
# }}}

# {{{ extra rules
#
# set Content-Encoding and reset Content-Type for browsers that
# support decompressing on-thy-fly (requires mod_setenv)
# $HTTP["url"] =~ "\.gz$" {
#       setenv.add-response-header = ("Content-Encoding" => "x-gzip")
#       mimetype.assign = (".gz" => "text/plain")
# }

# $HTTP["url"] =~ "\.bz2$" {
#       setenv.add-response-header = ("Content-Encoding" => "x-bzip2")
#       mimetype.assign = (".bz2" => "text/plain")
# }
#
# }}}

# {{{ debug
# debug.log-request-header   = "enable"
# debug.log-response-header  = "enable"
# debug.log-request-handling = "enable"
# debug.log-file-not-found   = "enable"
# }}}